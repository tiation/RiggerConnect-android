name: Enterprise Quality Checks

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2 -Dorg.gradle.parallel=true
  GRADLE_USER_HOME: ${{ github.workspace }}/.gradle

jobs:
  # Enterprise-grade quality checks and static analysis
  quality-gate:
    name: üîç Quality Gate
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Needed for detekt baseline
    
    - name: Setup JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle
    
    - name: Cache Gradle Dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          .gradle/caches
          .gradle/wrapper
        key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          gradle-${{ runner.os }}-
    
    - name: Grant Execute Permission for Gradlew
      run: chmod +x gradlew
    
    - name: Validate Gradle Wrapper
      uses: gradle/wrapper-validation-action@v1
    
    # Enterprise quality checks
    - name: Run ktlint Code Style Check
      run: ./gradlew ktlintCheck
    
    - name: Run Spotless Format Check
      run: ./gradlew spotlessCheck
    
    - name: Run Detekt Static Analysis
      run: ./gradlew detekt
    
    - name: Run Android Lint
      run: ./gradlew lint
    
    - name: Upload Quality Reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: quality-reports
        path: |
          **/build/reports/detekt/
          **/build/reports/ktlint/
          **/build/reports/lint/
        retention-days: 7

  # Unit tests with coverage reporting
  test:
    name: üß™ Unit Tests
    runs-on: ubuntu-latest
    needs: quality-gate
    timeout-minutes: 15
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    
    - name: Setup JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle
    
    - name: Cache Gradle Dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          .gradle/caches
          .gradle/wrapper
        key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          gradle-${{ runner.os }}-
    
    - name: Grant Execute Permission for Gradlew
      run: chmod +x gradlew
    
    - name: Run Unit Tests
      run: ./gradlew testDebugUnitTest
    
    - name: Generate Test Report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Unit Test Results
        path: '**/build/test-results/testDebugUnitTest/TEST-*.xml'
        reporter: java-junit
    
    - name: Upload Test Reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-reports
        path: |
          **/build/reports/tests/
          **/build/test-results/
        retention-days: 7

  # Build artifacts and run final checks
  build:
    name: üèóÔ∏è Build & Verify
    runs-on: ubuntu-latest
    needs: [quality-gate, test]
    timeout-minutes: 20
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    
    - name: Setup JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle
    
    - name: Cache Gradle Dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          .gradle/caches
          .gradle/wrapper
        key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          gradle-${{ runner.os }}-
    
    - name: Grant Execute Permission for Gradlew
      run: chmod +x gradlew
    
    - name: Build Debug APK
      run: ./gradlew assembleDebug
    
    - name: Run Final Quality Gate
      run: ./gradlew qualityGate
    
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          **/build/outputs/apk/
          **/build/reports/
        retention-days: 30
    
    - name: Upload Debug APK (PR Only)
      if: github.event_name == 'pull_request'
      uses: actions/upload-artifact@v4
      with:
        name: debug-apk
        path: app/build/outputs/apk/debug/*.apk
        retention-days: 7
    
    - name: Create Status Check
      if: always()
      uses: actions/github-script@v7
      with:
        script: |
          const conclusion = '${{ job.status }}' === 'success' ? 'success' : 'failure';
          const summary = conclusion === 'success' 
            ? '‚úÖ Enterprise quality standards met'
            : '‚ùå Failed to meet enterprise quality standards';
          
          github.rest.checks.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            name: 'Enterprise Quality',
            head_sha: context.sha,
            status: 'completed',
            conclusion,
            output: {
              title: 'Enterprise Quality Check Results',
              summary,
              text: 'Quality checks include:\n- Static Analysis (detekt)\n- Code Style (ktlint)\n- Formatting (spotless)\n- Android Lint\n- Unit Tests'
            }
          });
